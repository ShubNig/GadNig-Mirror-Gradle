/**
 *  Copyright 2017 Sinlov Lotqi <sinlovgmppt@gmail.com>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath depends.proguard_gradle
        classpath depends.gradle_fatjar_plugin
    }
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
     // test start
    // testImplementation test_implement.junit
    // test end

    compile api_dep.commons_cli
    compile api_dep.log4j
}

apply plugin: 'eu.appsatori.fatjar'


def mainClassName = MAIN_CLASSS_NAME
def outputVersionCode = VERSION_CODE as int
def outputVersionName = VERSION_NAME

defaultTasks 'build', 'clean', 'fatjar', 'runOutLibs'


gradle.taskGraph.whenReady {
    fatJar {
        manifest {
            attributes("Main-Class": mainClassName)
        }
    }
}

task runOutLibs(type: Copy, dependsOn: fatJar) {
    println("-> rootProject name: ${rootProject.name}")
    println("-> rootDir Path: ${rootDir}")
    println("-> outDir Path: ${rootDir}/build/outLibs")
    from('build/libs/')
    into("${rootDir}/build/outLibs")
    include("${project.name}.jar")
    rename("${project.name}.jar", "${project.name}-release-"
            + outputVersionName + "-" + outputVersionCode + ".jar")
    println("-> out jar path: " + "${rootDir}/build/outLibs/${project.name}-release-"
            + outputVersionName + "-" + outputVersionCode + ".jar"  )
}
